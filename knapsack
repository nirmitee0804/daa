def knapsack(weights, values, capacity):
    n = len(values)
    # Initialize a table to store the maximum values for different capacities
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        for w in range(1, capacity + 1):
            # If the current item's weight is less than or equal to the current capacity
            if weights[i - 1] <= w:
                # Decide whether to include the current item or not
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w])
            else:
                # If the current item's weight is more than the current capacity, don't include it
                dp[i][w] = dp[i - 1][w]

    # The result is stored at the bottom-right corner of the table
    return dp[n][capacity]

# Input from user
n = int(input("Enter the number of items: "))
weights = []
values = []

print("Enter the weights of the items:")
for _ in range(n):
    weights.append(int(input()))

print("Enter the values of the items:")
for _ in range(n):
    values.append(int(input()))

capacity = int(input("Enter the capacity of the knapsack: "))

print("Maximum value:", knapsack(weights, values, capacity))
